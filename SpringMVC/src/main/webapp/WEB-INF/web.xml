<web-app>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    <servlet>
        <servlet-name>hello</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!--         spring MVC的配置文件-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:application.xml</param-value>
        </init-param>


        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>hello</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--解决文件乱码-->
    <!--<filter>-->
    <!--<filter-name>charsetfilter</filter-name>-->
    <!--<filter-class>-->
    <!--    org.springframework.web.filter.CharacterEncodingFilter-->
    <!--</filter-class>-->
    <!--<init-param>-->
    <!--    <param-name>encoding</param-name>-->
    <!--    <param-value>UTF-8</param-value>-->
    <!--</init-param>-->
    <!--<init-param>-->
    <!--    <param-name>forceEncoding</param-name>-->
    <!--    <param-value>true</param-value>-->
    <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>charsetfilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <!-- 该类作为spring的listener使用，它会在创建时自动查找web.xml配置的applicationContext.xml文件 -->


    <!-- 此监听器主要用于解决java.beans.Introspector导致的内存泄漏的问题 -->
    <!--<listener>-->
    <!--<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>-->
    <!--</listener>-->
</web-app>